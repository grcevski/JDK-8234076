--- old/test/jdk/tools/launcher/modules/basic/BasicTest.java	2019-12-03 19:50:56.823344500 -0500
+++ new/test/jdk/tools/launcher/modules/basic/BasicTest.java	2019-12-03 19:50:56.293892200 -0500
@@ -29,6 +29,7 @@
  *          jdk.jlink
  * @build BasicTest jdk.test.lib.compiler.CompilerUtils
  * @run testng BasicTest
+ * @bug 8234076
  * @summary Basic test of starting an application as a module
  */
 
@@ -40,6 +41,7 @@
 
 import jdk.test.lib.compiler.CompilerUtils;
 import jdk.test.lib.process.ProcessTools;
+import jdk.test.lib.Utils;
 
 import org.testng.annotations.BeforeTest;
 import org.testng.annotations.Test;
@@ -70,6 +72,8 @@
     // the module main class
     private static final String MAIN_CLASS = "jdk.test.Main";
 
+    // for Windows specific launcher tests
+    static final boolean IS_WINDOWS = System.getProperty("os.name", "unknown").startsWith("Windows");
 
     @BeforeTest
     public void compileTestModule() throws Exception {
@@ -92,7 +96,7 @@
                 .getExitValue();
     }
 
-
+    
     /**
      * The initial module is loaded from an exploded module
      */
@@ -259,4 +263,55 @@
         assertTrue(exitValue != 0);
     }
 
+    /**
+     * Helper method that creates a ProcessBuilder with command line arguments
+     * while setting the _JAVA_LAUNCHER_DEBUG environment variable.
+     */
+    private ProcessBuilder createProcessWithLauncherDebugging(String... cmds) {
+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(Utils.addTestJavaOpts(cmds));
+        pb.environment().put("_JAVA_LAUNCHER_DEBUG", "true");
+
+        return pb;        
+    }
+
+    /**
+     * Test the ability for the Windows launcher to detect that the first app 
+     * argument launcher index is -1 when all passed in command line arguments are 
+     * prefixed with a dash. 
+     * 
+     * These tests are not expected to work on *nixes, and are ignored.
+     */
+    public void testForNegativeArgumentIndex() throws Exception {
+        if (!IS_WINDOWS) {
+            return;
+        }
+
+        String dir = MODS_DIR.toString();
+        String mid = TEST_MODULE + "/" + MAIN_CLASS;
+
+        // java --module-path=mods -module=$TESTMODULE/$MAINCLASS --help
+        // When the first app arg index isn't found we will not perform argument expansion
+        ProcessTools.executeProcess(
+            createProcessWithLauncherDebugging(
+                "--module-path=" + dir,
+                "--module=" + mid,
+                "--help"))
+            .outputTo(System.out)
+            .errorTo(System.out)
+            .shouldContain("Warning: first app arg index not found, -1")
+            .shouldNotContain("F--help");
+
+        // java --module-path=mods -module $TESTMODULE/$MAINCLASS --help
+        // When we find the first app argument correctly, argument expansion is performed
+        ProcessTools.executeProcess(
+            createProcessWithLauncherDebugging(
+                "--module-path=" + dir,
+                "--module", mid,
+                "--help"))
+            .outputTo(System.out)
+            .errorTo(System.out)
+            .shouldContain("points to --help")
+            .shouldContain("F--help");
+    } 
+
 }
